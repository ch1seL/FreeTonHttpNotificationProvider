<MudTable Items="@(MessageInfos ?? Array.Empty<MessageInfo>())" Dense="false" Hover="true" Bordered="false" Striped="true" Loading="@(MessageInfos == null)">
    <ToolBarContent>
        <MudText Typo="Typo.h6">Recived messages: @(MessageInfos?.Count ?? 0)</MudText>
        <MudSpacer/>
        <MudButton Variant="Variant.Filled" Color="Color.Primary" OnClick="@OnClearClickCallback">Clear</MudButton>
    </ToolBarContent>
    <HeaderContent>
        <MudTh>Time</MudTh>
        <MudTh>Message</MudTh>
        <MudTh/>
    </HeaderContent>
    <RowTemplate>
        <MudTd Class="pa-1">@context.DateTime</MudTd>
        <MudTd Class="pa-1">
            <pre class="json"><code>@context.Message</code></pre>
        </MudTd>
        <MudTd Class="pa-1">
            <MudChipSet @bind-SelectedChip="SelectedChip" Filter="true" Mandatory="false">
                <MudTooltip Text="Copy">
                    <MudChip OnClick="@(() => CopyToClipboard(context.Message))" Icon="@Icons.Filled.ContentCopy" Color="Color.Info"/>
                </MudTooltip>
            </MudChipSet>
        </MudTd>
    </RowTemplate>
    <LoadingContent>
        <MudText>Loading...</MudText>
    </LoadingContent>
    <PagerContent>
        <MudTablePager/>
    </PagerContent>
</MudTable>

@code
{
    [Inject]
    public IJsApiService JsApiService { get; set; }

    [Parameter]
    public IReadOnlyCollection<MessageInfo> MessageInfos { get; set; }

    [Parameter]
    public EventCallback UpdateMessagesEvent { get; set; }

    [Parameter]
    public EventCallback<MouseEventArgs> OnClearClickCallback { get; set; }

    private async Task CopyToClipboard(string message)
    {
        if (SelectedChip == null) return;
        await JsApiService.CopyToClipboardAsync(message);
        await Task.Delay(TimeSpan.FromSeconds(0.5));
        SelectedChip = null;
    }

    private MudChip SelectedChip { get; set; }

}